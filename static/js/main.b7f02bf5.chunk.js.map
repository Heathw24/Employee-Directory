{"version":3,"sources":["components/API.js","components/SearchBar.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["API","Promise","resolve","reject","fetch","then","response","json","results","SearchBar","props","className","type","onChange","handleInputChange","value","searchResult","placeholder","Profiles","Table","striped","bordered","hover","variant","onClick","sortEmployeesAsc","sortEmployeesDes","employees","map","employee","index","src","picture","large","alt","name","first","last","location","city","country","phone","email","App","handleSearchChange","event","newDisplayEmployees","state","filter","toLowerCase","includes","target","setState","DisplayEmployees","console","log","sortedEmployees","sort","a","b","employeeData","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7f02bf5.chunk.js","sourcesContent":["const API = new Promise( (resolve, reject) =>{\r\n    fetch('https://randomuser.me/api/?results=25')\r\n    .then((response) => response.json())\r\n    .then((response) => { resolve (response.results) })\r\n});\r\n\r\nexport default API;","import React from \"react\"\r\n\r\nfunction SearchBar(props){\r\n    \r\n\r\n    return(\r\n        <div className=\"searchBox\">\r\n            <input \r\n            className=\"searchbar\"\r\n            type=\"text\" \r\n            onChange={props.handleInputChange}\r\n            value={props.searchResult}\r\n            placeholder=\"Search for an employee\"\r\n            ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nfunction Profiles(props){\r\n   return(\r\n       <div className=\"tablebox\"> \r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Profile Image</th>\r\n                    <th>Name<span onClick={props.sortEmployeesAsc}>&#8595;</span> <span onClick={props.sortEmployeesDes}>&#8593;</span></th>\r\n                    <th>Location</th>\r\n                    <th>Phone</th>\r\n                    <th>Email</th>\r\n                    \r\n                </tr>\r\n            </thead>\r\n            {props.employees.map((employee, index) => (\r\n               <tbody key={index}>\r\n                   <tr>\r\n                       <td> <img src={employee.picture.large} alt={employee.name.first}/> </td>\r\n                       <td>{employee.name.last}, {employee.name.first}</td>\r\n                       <td>{employee.location.city}, {employee.location.country}</td>\r\n                       <td>{employee.phone}</td>\r\n                       <td>{employee.email}</td>\r\n                   </tr>\r\n               </tbody> \r\n            ))}\r\n        </Table>\r\n\r\n       </div>\r\n   )\r\n\r\n}\r\n\r\nexport default Profiles;","\nimport './App.css';\nimport React, { Component } from 'react';\nimport API from \"./components/API\";\nimport SearchBar from \"./components/SearchBar\";\nimport Profiles from \"./components/Profiles.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      employees: [],\n      searchResult: \"\",\n      DisplayEmployees: [],\n    }\n  }\n\n  async componentDidMount() {\n    const employeeData = await API\n    this.setState({\n      employees: employeeData,\n      searchResult: \"\",\n      DisplayEmployees: employeeData\n    }\n    )\n  }\n\n  \n  handleSearchChange = event => {\n    const newDisplayEmployees = this.state.employees.filter(employee => employee.name.first.toLowerCase().includes(event.target.value.toLowerCase()) || employee.name.last.toLowerCase().includes(event.target.value.toLowerCase()));    \n    this.setState({ DisplayEmployees: newDisplayEmployees });\n  };\n  \n  sortEmployeesAsc = event => {\n    console.log(\"successful\");\n   var sortedEmployees = this.state.DisplayEmployees;\n    sortedEmployees.sort((a,b) => (a.name.last > b.name.last) ? 1: -1);\n    this.setState({ DisplayEmployees: sortedEmployees});\n  };\n\n  sortEmployeesDes = event => {\n    console.log(\"successful\");\n   var sortedEmployees = this.state.DisplayEmployees;\n    sortedEmployees.sort((a,b) => (a.name.last > b.name.last) ? -1: 1);\n    this.setState({ DisplayEmployees: sortedEmployees});\n  };\n\n\n\n\n\n\n\n  render() {\n\n    return(\n    <div className=\"App\">\n      <header className=\"headerbox\">\n        <h1>Employee Directory</h1>\n        <p>Use the search box to narrow results</p>\n      </header>\n      <div>\n        <SearchBar \n        handleInputChange={this.handleSearchChange}\n        // search = \"fill in props \" handleChange = \"Fill in props\"\n        ></SearchBar>\n        <Profiles employees={this.state.DisplayEmployees} searchResult={this.handleSearchChange} sortEmployeesAsc={this.sortEmployeesAsc} sortEmployeesDes={this.sortEmployeesDes}></Profiles>\n      </div>\n    </div>\n  \n    )}\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}